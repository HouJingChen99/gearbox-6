#Нормальне состояние зубчатой передачи
import numpy as np
from matplotlib import pyplot as plt

RPM = 600    #оборотная скорость
f_in = RPM / 60 #частота вращения входного вала
A = 3 #Амплитуда вибрации на частоте ротора
k_in = 36 #число зубцов входного вала
m_out = 12 #число зубцов выходного вала
f_out = f_in * k_in / m_out #частота вращения выходного вала
fz = k_in * f_in #частота зацепления зубцов
N = 8000 #частота дискретизации (Число спектральных линий)
dt = 1 / N #интервал дискретизации
t_mod = 1 #время моделирования

f = np.array([[f_in], [2 * f_in], [fz], [f_out], [2 * f_out]]) #Вектор частот гармонических составляющих
t = np.arange(0, t_mod + dt, dt)#вектор временных отсчётов
arg = np.sin(2 * np.pi * f * t)

s = A*arg[0] + 0.2 * A * arg[1] + 1.1 * A * arg[2] + 0.8 * A * arg[3] + 0.18 * A * arg[4] #выходной сигнал
plt.plot(t, s, 'b') #построение графика полученного сигнала
plt.xlabel('Время, $с$')
plt.ylabel('Виброускорение, $мм/с^2$')
plt.title('Временное представление \n нормального состояния зубчатой передачи')
plt.grid()
plt.show()

s_fft = 2 * np.abs(np.fft.fft(s)) / N #амплитудный спектр
n = s.size
freq = np.fft.fftfreq(n, dt) #масштабирование частотной оси
plt.plot(freq, s_fft) #спектр сигнала
plt.xlabel('Частота, $Гц$')
plt.ylabel('Виброускорение, $мм/с^2$')
plt.title('Спектр нормального состояния \n зубчатой передачи')
plt.grid()
plt.show()